linters-settings:
  cyclop:
    max-complexity: 30
    skip-tests: true
  depguard:
    list-type: blacklist
    packages:
      # logging is allowed only by logutils.Log, logrus
      # is allowed to use only in logutils package
#      - github.com/sirupsen/logrus
    packages-with-error-message:
#      - github.com/sirupsen/logrus: "logging is allowed only by logutils.Log"
  dupl:
    threshold: 100
  funlen:
    lines: 250
    statements: 100
  goconst:
    min-len: 2
    min-occurrences: 3
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  gocognit:
    # minimal code complexity to report, 30 by default (but we recommend 10-20)
    min-complexity: 36
  gocyclo:
    min-complexity: 36
  goimports:
#    local-prefixes: github.com/golangci/golangci-lint
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return
  govet:
    check-shadowing: false
    settings:
      printf:
        funcs:
  lll:
    line-length: 180
  maligned:
    suggest-new: true
  misspell:
    locale: US
  nestif:
    min-complexity: 10

  varnamelen:
    # The longest distance, in source lines, that is being considered a "small scope".
    # Variables used in at most this many lines will be ignored.
    # Default: 5
    max-distance: 50
    # The minimum length of a variable's name that is considered "long".
    # Variable names that are at least this long will be ignored.
    # Default: 3
    min-name-length: 2

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
#    - deadcode
    - decorder
    - depguard
    - dogsled
    - dupl
#    - dupword
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - execinquery
    - exhaustive
#    - exhaustivestruct
#    - exhaustruct
    - exportloopref
    - forbidigo
    - forcetypeassert
    - funlen
    - gci
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
#    - godox
#    - goerr113
    - gofmt
    - gofumpt
    - goheader
    - goimports
#    - golint
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - grouper
#    - ifshort
    - importas
    - ineffassign
    - interfacebloat
#    - interfacer
    - ireturn
    - lll
#    - loggercheck
    - maintidx
    - makezero
#    - maligned
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
#    - nonamedreturns
#    - nosnakecase
    - nosprintfhostport
    - paralleltest
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
#    - scopelint
    - sqlclosecheck
    - staticcheck
#    - structcheck
    - stylecheck
    - tagliatelle
    - tenv
#    - testableexamples
    - testpackage
    - thelper
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars
#    - varcheck
    - varnamelen
    - wastedassign
    - whitespace
#    - wrapcheck
    - wsl

issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - gomnd
        - lll
        - maligned
        - gocyclo
        - dupl
        - funlen

    - linters:
      - gosec
      text: "G[202]"
#      text: "G[101]"


run:
  skip-files:
   - ".*_test.go"

  modules-download-mode: mod

# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.49.x # use the fixed version to not introduce new linters unexpectedly
  prepare:
    - echo "here I can run custom commands, but no preparation needed for this repo"


