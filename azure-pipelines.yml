trigger:
  tags:
    include:
    - v*
  branches:
    include:
    - develop
    - release*
  paths:
    exclude:
    - README.md
    - CHANGELOG.md

variables:
  GOROOT: '/usr/local/go1.15'
  GOPATH: '/tmp/go'
  GOBIN:  '$(GOPATH)/bin'
  repository: 'focal-freedom-236620/operator'
  build: $(Build.BuildId)
  ref: $(Build.SourceBranch)
  branch: $(Build.SourceBranchName)
  version:

jobs:
- job: Operator
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - script: |
      set -e
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: 'Set up the Go workspace'

  - task: GoTool@0
    inputs:
      version: '1.15'
      goPath: $(GOPATH)
      goBin: $(GOBIN)
    displayName: 'Install Golang'

  - script: |
      set -e
      . version
      VERS=$MAJOR.$MINOR.$PATCH$SUFFIX
      if [[ $(ref) == refs/tags* ]]; then
        TAG=$(echo $(ref) | sed "s|refs/tags/v||g")
        if [[ $TAG != $VERS ]]; then
          echo 'Version file does not match git tag'
          exit 1
        fi
      fi
      echo "##vso[task.setvariable variable=version]$VERS"
      echo $(version)
    displayName: 'Set version variable'

  - script: |
      set -e
      make lint
    displayName: 'Lint source'

  - task: Docker@2
    displayName: 'build docker'
    inputs:
      containerRegistry: 'Edgeworx GCP'
      repository: $(repository)
      command: 'buildAndPush'
      Dockerfile: './Dockerfile'
      buildContext: './'
      tags: |
        $(version)
        $(branch)
        $(branch)-$(build)
        latest

  - script: |
      set -e
      echo $(version) > $(Build.ArtifactStagingDirectory)/version.txt
    displayName: 'Create version artefact'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'operator'
    displayName: 'Publish artefacts'
